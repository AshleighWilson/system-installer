---
- name: Create the `aur_builder` user
  ansible.builtin.user:
    name: aur_builder
    create_home: yes
    group: wheel
  become: yes

- name: Allow the `aur_builder` user to run `sudo pacman` without a password
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/11-install-aur_builder
    line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
    create: yes
    validate: 'visudo -cf %s'
  become: yes
    
- name: Install AUR helper
  kewlfft.aur.aur:
    name: paru
    use: makepkg
    state: present
  become: yes
  become_user: aur_builder
  
- name: Install core packages
  kewlfft.aur.aur:
    name: "{{ packages.arch.core }}"
    use: paru
    state: present
  become: yes
  become_user: aur_builder
    
- name: Create user group
  group:
    name: "{{ user.name }}"
    state: present
    gid: "{{ user.gid }}"

- name: Create other groups
  group:
    name: "{{ item.group }}"
    state: present
    gid: "{{ item.gid }}"
  loop: "{{ system.groups }}"
  become: yes

- name: Create normal user
  user:
    name: "{{ user.name }}"
    comment: "{{ user.fullname }}"
    group: "{{ user.name }}"
    groups: "{{ user.groups }}"
    append: yes
    shell: /bin/zsh
  become: yes

- name: Delete bash config files
  file: "path={{ item }} state=absent"
  loop:
    - .bash_logout
    - .bash_profile
    - .bashrc
    
- name: Copy private ssh files
  copy:
    src: "/home/ashleigh/.ssh/{{ item }}"
    dest: $HOME/.ssh/
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: preserve
  loop:
    - config
    - id_rsa.pub
    - personal.keyx

- name: Copy keepass database
  copy:
    src: "/home/ashleigh/Nextcloud/Apps/KeePassXC/Personal.kdbx"
    dest: $HOME/Nextcloud/Apps/KeePassXC/
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: preserve
    
- name: Clone dotfiles and setup user directory
  block:

    - name: Clone dotfiles
      command:
        chdir: $HOME
        cmd: yadm clone https://github.com/AshleighWilson/dotfiles.git
        creates: $HOME/.local/share/yadm/repo.git/

    - name: Show untracked files with yadm
      command: yadm gitconfig --unset status.showUntrackedFiles
      register: result
      failed_when: result.rc != 0 and result.rc != 5

    - name: Clone dotfiles submodules
      command:
        chdir: $HOME
        cmd: yadm submodule update --init
        creates: $HOME/.local/share/zinit/zinit.zsh
    
    - name: Copy personal files
      ansible.builtin.copy:
        src: "{{ lookup('env','HOME') }}/{{ item.from }}"
        dest: "$HOME/{{ item.to }}"
        owner: "{{ user.name }}"
        group: "{{ user.name }}"
        mode: preserve
      loop: "{{ user.files }}"
      
- name: Configure Gnome
  block:
    - name: Install psutil pip package for dconf configuration
      pip:
        name: psutil

    - name: Set wallpaper
      dconf:
        key: "/org/gnome/desktop/background/picture-uri"
        value: "'file:///home/ashleigh/.local/share/backgrounds/2022-06-10-19-33-29-fox-forest.jpg'"
        state: present
        
    - name: Disable automatic screen brightness
      dconf:
        key: "/org/gnome/settings-daemon/plugins/power/ambient-enabled"
        value: "false"
        state: present

    - name: Configure titlebar buttons
      dconf:
        key: "/org/gnome/desktop/wm/preferences/button-layout"
        value: "'appmenu:minimize,close'"
        state: present
        
    - name: Enable Gnome shell extensions
      dconf:
        key: "/org/gnome/shell/enabled-extensions"
        value: "['caffeine@patapon.info', 'blur-my-shell@aunetx', 'hibernate-status@dromi', 'trayIconsReloaded@selfmade.pl', 'dash-to-dock-cosmic-@halfmexicanhalfamazing@gmail.com']"
        state: present

    - name: Configure favourite apps on the dock
      dconf:
        key: "/org/gnome/shell/favorite-apps"
        value: "['org.gnome.Nautilus.desktop', 'org.gnome.Terminal.desktop', 'firefox.desktop', 'mozilla-thunderbird.desktop', 'org.keepassxc.KeePassXC.desktop', 'org.gnome.Calendar.desktop']"
        state: present
        
    - name: Configure dash to dock background opacity
      dconf:
        key: "/org/gnome/shell/extensions/dash-to-dock/background-opacity"
        value: "0.0"
        state: present
    - name: Configure dash to dock max icon size
      dconf:
        key: "/org/gnome/shell/extensions/dash-to-dock/dash-max-icon-size"
        value: "48"
        state: present
    - name: Configure dash to dock isolated workspaces
      dconf:
        key: "/org/gnome/shell/extensions/dash-to-dock/isolate-workspaces"
        value: "true"
        state: present
    - name: Configure dash to dock running indicator style
      dconf:
        key: "/org/gnome/shell/extensions/dash-to-dock/running-indicator-style"
        value: "'DOTS'"
        state: present
    - name: Configure dash to dock to show favourites
      dconf:
        key: "/org/gnome/shell/extensions/dash-to-dock/show-favorites"
        value: "true"
        state: present
    - name: Configure dash to dock to hide apps button
      dconf:
        key: "/org/gnome/shell/extensions/dash-to-dock/show-show-apps-button"
        value: "false"
        state: present
    - name: Configure dash to dock transparency mode
      dconf:
        key: "/org/gnome/shell/extensions/dash-to-dock/transparency-mode"
        value: "'FIXED'"
        state: present
    - name: Configure Gnome GTK3 theme
      dconf:
        key: "/org/gnome/desktop/interface/gtk-theme"
        value: "'adw-gtk3'"
        state: present
    - name: Configure Gnome icons
      dconf:
        key: "/org/gnome/desktop/interface/icon-theme"
        value: "'Tela-purple'"
        state: present
#    - name: Configure dash to dock transparency mode
#      dconf:
#        key: "/org/gnome/"
#        value: ""
#        state: present


#hosts: server
#name: Common configuration
#block:

#  - name: Configure dnf
#    lineinfile:
#      path: /etc/dnf/dnf.conf
#      insertafter: "[main]"
#      line: "{{ item }}"
#    loop:
#          - "fastestmirror=True"
#          - "max_parallel_downloads=10"
#          - "defaultyes=True"
#          - "keepcache=True"

    #  - name: Add yadm repository
     #   yum_repository:
    #      name: yadm
   #       description: yadm repo
  #        baseurl: https://download.opensuse.org/repositories/home:TheLocehiliosan:yadm/Fedora_Rawhide/
 #         gpgcheck: no

#      - name: Add lazygit repository
      #  community.general.copr:
     #     name: atim/lazygit

    #  - name: Install core software
   #     dnf:
  #        name: "{{ packages.core }}"
 #         state: present
#          enablerepo: yadm

#      - name: Install core npm packages
#        npm:
#          name: "{{ item }}"
#          global: yes
#        loop: "{{ packages.core_npm }}"

